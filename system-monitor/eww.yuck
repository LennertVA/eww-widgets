;; **
;; ** Widgets config for EWW
;; ** Created by : @LennertVA
;; **

;; ** Variables ***********************************************************************

(defpoll MHZ :interval "1s" `scripts/eww.sh --mhz`)
(defpoll HST :interval "24h" `hostname`)
(defpoll UPT :interval "1s" `uptime`)

;; Average CPU frequency is green until
(defvar MHZ_GRN "2500")
;; Average CPU frequency is red from
(defvar MHZ_RED "4000")
;; Used memory percentage is green until (0.0-1.0)
(defvar MEM_GRN "0.5")
;; Used memory percentage is red from (0.0-1.0)
(defvar MEM_RED "0.8")
;; Free swap percentage is green until (0.0-1.0)
(defvar SWP_GRN "0.5")
;; Free swap percentage is green until (0.0-1.0)
(defvar SWP_RED "0.2")
;; CPU temp is green until
(defvar TMP_GRN "40")
;; CPU temp is red from
(defvar TMP_RED "60")
;; Load is green until
(defvar ULD_GRN "1")
;; Load is red from
(defvar ULD_RED "8")

(defvar GREEN "rgba(0,220,0,0.6)")
(defvar ORANGE "rgba(235,149,52,0.6)")
(defvar RED "rgba(220,0,0,0.6)")

(defvar NET_DEV "wlp12s0")


;; ** Widgets *************************************************************************

; system
(defwidget system []
    (box 
        :class "gkrellm"
        :orientation "v" 
        :space-evenly false 
        :spacing 2
        (label
            :class "header"
            :text {HST} 
            :xalign 0.5
        ) 
        (box 
            :class "grid"
            :height 161
                (graph 
                    :style "color: rgba(255,255,255,0.5);"
                    :value {EWW_CPU.avg} 
                    :max 16 
                    :time-range "200s" 
                    :line-style "round" 
                )
        )
        (box
            :style "padding: 10px 0px"
            :orientation "v" 
            :space-evenly false 
            (overlay
                (label 
                    :text "CPU max:"
                    :xalign 0 
                )
                (label 
                    :text "${search(MHZ, '\\d+')[0]} MHz  "
                    :xalign 1 
                )
            )
            (overlay
                (label 
                    :text "CPU avg:"
                    :xalign 0 
                )
                (label
                    :text "${search(MHZ, '\\d+')[1]} MHz  "
                    :class "right"
                    :style "color: ${search(MHZ, '\\d+')[1] < MHZ_GRN ? GREEN : search(MHZ, '\\d+')[1] < MHZ_RED ? ORANGE : RED};"
                    :xalign 1
                )
            )
            (overlay
                (label
                    :text "CPU temp:"
                    :xalign 0
                ) 
                (label
                    :text "${round(EWW_TEMPS.K10TEMP_TCCD1, 0)}°C  "
                    :class "right"
                    :style "color: ${EWW_TEMPS.K10TEMP_TCCD1 < TMP_GRN ? GREEN : EWW_TEMPS.K10TEMP_TCCD1 < TMP_RED ? ORANGE : RED};"
                    :xalign 1
                )
            )
        )
        (overlay
            (box 
                :class "grid"
                :height 161
                    (graph 
                        :style "color: rgba(0,255,0,0.5);"
                        :value {EWW_NET.wlp12s0.NET_DOWN}
                        :dynamic false
                        :time-range "200s" 
                        :line-style "round" 
                        :thickness 1.5
                        :max 80000000
                    )
            )
            (box 
                :height 161
                    (graph 
                        :style "color: rgba(255,0,0,0.5);"
                        :value {EWW_NET.wlp12s0.NET_UP}
                        :dynamic false
                        :time-range "200s" 
                        :line-style "round" 
                        :thickness 1.5
                        :max 80000000
                    )
            )
        )
        (box
            :style "padding-top: 10px"
            :orientation "v" 
            :space-evenly false 
            (overlay
                (label 
                    :text "wlp12s0 ⬆"
                    :xalign 0 
                )
                (label
                    :text "${round(EWW_NET.wlp12s0.NET_UP / 1048576, 2)}MBps  "
                    :class "right"
                    :xalign 1
                )
            )
            (overlay                    
                (label 
                    :text "wlp12s0 ⬇"
                    :xalign 0 
                )
                (label
                    :text "${round(EWW_NET.wlp12s0.NET_DOWN / 1048576, 2)}MBps  "
                    :class "right"
                    :xalign 1
                )
            )                
        )
        (box
            :orientation "v" 
            :space-evenly false 
            (overlay
                (label 
                    :text "RAM"
                    :xalign 0 
                )
                (label
                    :text "${round(EWW_RAM.used_mem / 1073741824, 1)}GB of ${round(EWW_RAM.total_mem / 1073741824, 1)}GB  "
                    :class "right"
                    :style "color: ${(EWW_RAM.used_mem/EWW_RAM.total_mem) < MEM_GRN ? GREEN : (EWW_RAM.used_mem/EWW_RAM.total_mem) < MEM_RED ? ORANGE : RED};"
                    :xalign 1
                )
            )
            (overlay
                (label 
                    :text "Swap"
                    :xalign 0 
                )
                (label
                    :text "${round((EWW_RAM.total_swap - EWW_RAM.free_swap) / 1073741824, 1)}GB of ${round(EWW_RAM.total_swap / 1073741824, 1)}GB  "
                    :class "right"
                    :style "color: ${(EWW_RAM.free_swap/EWW_RAM.total_swap) > SWP_GRN ? GREEN : (EWW_RAM.free_swap/EWW_RAM.total_swap) > SWP_RED ? ORANGE : RED};"
                    :xalign 1
                )
            )
        )
        (box
            :orientation "v" 
            :space-evenly false 
            (overlay
                (label 
                    :text "Uptime"
                    :xalign 0 
                )
                (label
                    :text "${search(UPT, '^[^,]*')[0]}  "
                    :class "right"
                    :xalign 1
                )
            )
            (overlay
                (label 
                    :text "Load"
                    :xalign 0 
                )
                (label
                    :text "${search(UPT, '[^:]+$')[0]}  " 
                    :class "right"
                    :style "color: ${search(search(UPT, '[^:]+$')[0], '\\d+')[0] < ULD_GRN ? GREEN : search(search(UPT, '[^:]+$')[0], '\\d+')[0] < ULD_RED ? ORANGE : RED};"
                    :xalign 1
                )
            )
        )
    )
)


;; ** Windows *************************************************************************

;; system
(defwindow system
    :monitor 0
    :geometry (geometry :x "2840px"
        :y "50px"
        :width "200px"
        :height "600px"
        :anchor "top left")
    :stacking "bg"
    :windowtype "dock"
    :wm-ignore true
    :focusable "none"    
(system))
